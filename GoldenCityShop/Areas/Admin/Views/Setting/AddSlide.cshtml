@model ViewModel.Admin.Setting.AddSlideShowViewModel

@{
    ViewBag.Title = "افزودن اسلاید شو";
    var notAllowAdd = ViewBag.AllowAddSlide != null && ViewBag.AllowAddSlide == "nok";
}
@if (notAllowAdd)
{
    <div class="col-md-5 alert alert-warning text-center">
        <h4>به دلیل بارگزاری هرچه سریع تر صفحه اول سایت، شما قادر هستید 7 تصویر برای اسلایدشو درج کنید</h4>
    </div>
}
else
{
    using (Html.BeginForm(MVC.Admin.Setting.ActionNames.AddSlide, MVC.Admin.Setting.Name, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>
                <a data-ajax="true" data-ajax-method="GET" data-ajax-mode="replace" data-ajax-success="LightBox.onSuccess" data-ajax-update="#lightBox" data-toggle="modal" 
                   href="@Url.Action(MVC.Admin.Folder.ActionNames.Index, MVC.Admin.Folder.Name)?elementId=ImagePath"  rel="nofollow" role="button">
                <i class="glyphicon glyphicon-picture font-size-30"></i>
                </a>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageAltText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ImageAltText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageAltText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DataHorizontal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.DataHorizontal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataHorizontal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DataVertical, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.DataVertical, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataVertical, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ShowTransition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.ShowTransition, ViewBag.ShowTransitionList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShowTransition, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.HideTransition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.HideTransition, ViewBag.HideTransitionList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HideTransition, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.Position, ViewBag.PositionList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-7">
                    <input type="submit" value="ثبت" class="btn  btn-success" />
                </div>
            </div>
        </div>
    }

}
@section JavaScript
{
    @Scripts.Render("~/bundles/jqueryval")
}
