
@model ViewModel.Admin.Page.EditPageViewModel

@{
    ViewBag.Title = "ویرایش صفحه";
}


@using (Html.BeginForm(MVC.Admin.Page.ActionNames.Edit,MVC.Admin.Page.Name,FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.KeyWords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KeyWords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
            <a data-ajax="true" data-ajax-method="GET" data-ajax-mode="replace" data-ajax-success="LightBox.onSuccess" data-ajax-update="#lightBox" data-toggle="modal"
               href="@Url.Action(MVC.Admin.Folder.ActionNames.Index, MVC.Admin.Folder.Name)?elementId=ImagePath" rel="nofollow" role="button">
                <i class="glyphicon glyphicon-picture font-size-30"></i>
            </a>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PageShowPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EnumDropDownListFor(model => model.PageShowPlace,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PageShowPlace, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Content )
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="دخیره تغییرات" class="btn  btn-success" />
            </div>
        </div>
    </div>
}
@section JavaScript
{
    <script>
        CKEDITOR_BASEPATH = "@Url.Content("~/Scripts/ckeditor/")";
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/editor/js")
    <script>
        CKEDITOR.config.toolbar = Admin.CkeditorToolbar;
        window.CKEDITOR.replace('Content', { skin: 'moono-dark', language: "fa" });
    </script>
}
