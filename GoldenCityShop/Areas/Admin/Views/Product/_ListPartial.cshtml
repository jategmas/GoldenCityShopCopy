@using DomainClasses.Enums
@using PagedList
@using PagedList.Mvc
@using ViewModel.Admin.Product
@model ProductListViewModel

@Html.AntiForgeryToken()
<table class="table table-striped table-hover" id="productTable">
    <thead>
        <tr>

            <th>نام</th>
            <th>اطلاعات آماری</th>
            <th>درصد تخفیف</th>
            <th>ضریب خرید</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.ProductList)
        {
            <tr class="@(product.Notification? "danger":"")">

                <td>@product.Name</td>
                <td>
                    <strong class="text-info">قیمت:@Html.DisplayFor(a => product.Price)</strong>
                    <strong class="text-success">تعداد موجود:@Html.DisplayFor(a => product.Stock)</strong>
                    <br />
                    <strong class="text-primary">تعداد رزرو:@Html.DisplayFor(a => product.ReserveCount)</strong>
                    <strong class="text-warning">تعداد بازدید:@product.ViewCount</strong>
                </td>

                <td class="text-center">@product.DiscountPercent</td>
                <td class="text-center">@Html.DisplayFor(a => product.Ratio)</td>


                <td class="text-left">
                    <a class="btn btn-sm btn-success" data-toggle="tooltip" data-placement="top" title="ویرایش"
                       href="@Url.Action(MVC.Admin.Product.ActionNames.Edit,MVC.Admin.Product.Name,new {id=product.Id})">
                        <i class=" glyphicon glyphicon-pencil"></i>
                    </a>
                    <span data-toggle="tooltip" data-placement="top" title="حذف" id="row-@product.Id"  class="btn btn-danger btn-sm">
                        <i class="fa fa-trash-o"></i>
                    </span>
                    @if (product.AddedImages)
                    {
                        <a class="btn btn-sm btn-info" data-toggle="tooltip" data-placement="top" title=" تصاویر"
                           href="@Url.Action(MVC.Admin.Product.ActionNames.EditPictures,MVC.Admin.Product.Name,new {productId=product.Id})">
                            <i class="fa fa-edit"> </i>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-sm btn-info" data-toggle="tooltip" data-placement="top" title=" تصاویر"
                           href="@Url.Action(MVC.Admin.Product.ActionNames.AddPictures,MVC.Admin.Product.Name,new {productId=product.Id})">
                            <i class="fa fa-edit"></i>
                        </a>
                    }
                    <a data-ajax="true" data-ajax-method="GET" data-ajax-mode="replace" class="btn btn-sm btn-primary"
                       data-ajax-success="LightBox.onSuccess" data-ajax-update="#lightBox" data-toggle="modal"
                       href="@Url.Action(MVC.Admin.Product.ActionNames.FillAttributes, MVC.Admin.Product.Name, new { productId = product.Id })" rel="nofollow" role="button">
                        <i class="fa fa-list" data-toggle="tooltip" data-placement="top" title="مشحصات"></i>
                    </a>

                </td>
            </tr>
        }
    </tbody>

</table>



@using (Ajax.BeginForm(MVC.Admin.Product.ActionNames.List, MVC.Admin.Product.Name, null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "productsList" }, new { @class = "form-horizontal", id = "productFilterForm" }))
{
    <div class="row">
        <div class="col-md-7">
            @Html.Hidden("term", Model.Term)
            @Html.Hidden("freeSend", Model.FreeSend)
            @Html.Hidden("deleted", Model.Deleted)
            @Html.Hidden("categoryId", Model.CategoryId)
            @Html.Hidden("productSearchBy", ViewBag.ProductSearchBy as string)
            <div class="col-md-4">
                @Html.DropDownList("productOrderBy", ViewBag.ProductOrderByList as IEnumerable<SelectListItem>, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.DropDownList("order", ViewBag.OrderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                @Html.DropDownList("count", ViewBag.CountList as IEnumerable<SelectListItem>, new { @class = "form-control" })
            </div>

            <div class="col-md-3"><input type="submit" value="مرتب سازی" class="btn btn-md btn-default" /></div>
        </div>
    </div>
}
@Html.PagedListPager(new StaticPagedList<ProductViewModel>(Model.ProductList, Model.PageNumber, Model.PageCount, Model.TotalProducts), pageNumber => Url.Action(MVC.Admin.Product.ActionNames.List, MVC.Admin.Product.Name, new
                {
                    term = Model.Term,
                    page = pageNumber,
                    count = Model.PageCount,
                    order = Model.Order,
                    productOrderBy = Model.ProductOrderBy,
                    productType = Model.ProductType,
                    categoryId = Model.CategoryId,
                    deleted = Model.Deleted,
                    freeSend = Model.FreeSend
                }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast, new AjaxOptions { AllowCache = false, HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "productsList" }))

<script>
    Public.Routin();
</script>